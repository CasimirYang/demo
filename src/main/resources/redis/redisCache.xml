<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

<cache:annotation-driven />

    <!--set transactionAware(boolean) to true,让cache事务能被外层事务包围-->
    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <property name="transactionAware" value="true" />
        <constructor-arg name="redisOperations" ref="redisTemplate" />
     </bean>

    <!--spring-data-redis 对 value 进行了序列化 变成byte[] 再调用对应的redis java client进行存储的。-->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate"
          p:connection-factory-ref="jedisConnFactory"/>

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:use-pool="true"  p:host-name="localhost" p:port="6379" />
</beans>